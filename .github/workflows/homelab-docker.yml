name: Home CICD (Docker)

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub or another container registry
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # Step 3: Build Docker image
      - name: Build Docker image
        run: docker build -t my-portfolio-2:latest .

      # Step 4: Push Docker image to registry
      - name: Push Docker image
        run: |
          docker tag my-portfolio-2:latest ${{ secrets.DOCKER_USERNAME }}/my-portfolio-2:latest && \
          docker push ${{ secrets.DOCKER_USERNAME }}/my-portfolio-2:latest

      # Step 5: Copy Docker Compose or other deployment files to the remote server (optional)
      # - name: Copy deployment files to remote server
      #   uses: appleboy/scp-action@v0.1.7
      #   with:
      #     host: ${{ secrets.VM_UBUNTU_SERVER_HOST }}
      #     username: ${{ secrets.VM_UBUNTU_SERVER_USERNAME }}
      #     port: ${{ secrets.VM_UBUNTU_SERVER_PORT }}
      #     key: ${{ secrets.VM_UBUNTU_SERVER_PRIVATE_KEY }}
      #     source: "docker-compose.yml"
      #     target: "/home/${{ secrets.VM_UBUNTU_SERVER_USERNAME }}/docker-compose.yml"

      # Step 6: Deploy the application using SSH
      - name: Deploy Docker container on remote server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VM_UBUNTU_SERVER_HOST }}
          username: ${{ secrets.VM_UBUNTU_SERVER_USERNAME }}
          port: ${{ secrets.VM_UBUNTU_SERVER_PORT }}
          key: ${{ secrets.VM_UBUNTU_SERVER_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-portfolio-2:latest
            docker stop my-portfolio-2 || true
            docker rm my-portfolio-2 || true
            docker image prune -f
            docker container prune -f
            docker network prune -f
            docker run -d --name my-portfolio-2 -p 3000:80 ${{ secrets.DOCKER_USERNAME }}/my-portfolio-2:latest
